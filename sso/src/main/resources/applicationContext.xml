<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context.xsd
	       http://www.springframework.org/schema/aop
	       http://www.springframework.org/schema/aop/spring-aop.xsd
	       http://www.springframework.org/schema/tx 
	       http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config/>

	<context:component-scan base-package="com.rpc"/>
	 <aop:aspectj-autoproxy/>

     <bean class="com.config.ConfigUtil">
		<property name="fileEncoding" value="UTF-8"/>
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:service.properties</value>
			</list>
		</property>
	 </bean>

	<bean  id="smartFilter" class="com.filter.SmartContainer">
		<property name="ssoServerUrl" value="http://localhost:8082"/>
		<property name="isServer" value="false"/>
		<property name="filters" >
			<list>
				<bean class="com.filter.SsoFilter">
				</bean>
				<!--<bean class="com.filter.LogoutFilter">
					<property name="pattern" value="/admin/logout" />
					<property name="ssoBackUrl" value="/admin/index" />
				</bean>-->
				<bean class="com.filter.PermissionFilter">
					<property name="ssoAppCode" value="${sso.app.code}" />
				</bean>
			</list>

		</property>
	</bean>

	<!--SSO令牌管理(分布式) : 用于部署多JVM实例时，RedisSession覆盖HttpSession实现Session共享
	<import resource="classpath:spring-redis-sso.xml" />
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	<bean id="redisCache" class="com.smart.sso.server.common.RedisCache">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
	<bean id="tokenManager" class="com.smart.sso.server.common.RedisTokenManager">
		<property name="tokenTimeout" value="${sso.timeout}" />
	</bean>
	 -->
	<!-- Dubbo : 为Token验证和授权提供RPC服务，不开启默认Hessian -->

	<import resource="dubbo-consumer.xml" />


	<!-- activeMQ : 用于权限有修改时，异步通知应用更新权限 -->
	<import resource="applicationContext-mq.xml" />


<!--
	<import resource="classpath:applicationContext-rpc.xml"/>
-->
</beans>